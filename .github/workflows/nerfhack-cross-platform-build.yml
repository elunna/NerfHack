name: NerfHack

on:
  push:
    branches: [ master, dev ]
    tags:
      - '**'
  pull_request:
    branches: [ master, dev ]

jobs:
  linux-build:
    runs-on: ubuntu-latest
    env:
      #LUA_VERSION: 5.4.2
      #HINTS_FILE: linux.370
      HINTS_FILE: linux-debug
    steps:
    - uses: actions/checkout@v4
    - name: setup
      run: ./sys/unix/setup.sh sys/unix/hints/$HINTS_FILE
    - name: fetch lua
      run: |
        make fetch-lua
    - name: make all
      run: make all
    - name: make install
      run: make install

  mac-build:
    runs-on: macos-latest
    env:
      HINTS_FILE: macOS.370
    steps:
    - uses: actions/checkout@v4
    - name: setup
      run: |
        ./sys/unix/setup.sh sys/unix/hints/$HINTS_FILE
        make fetch-lua
    - name: make all
      run: make all
    - name: make install
      run: make install

  windows-build:
    permissions: write-all
    runs-on: windows-latest
    env:
        ADD_LUA: Y
        WANT_LUAC: N
        LUATOP: ../submodules/lua
        LUASRC: ../submodules/lua
        ADD_CURSES: Y
        PDCURSES_TOP: ../submodules/pdcurses
        LUA_VERSION: 5.4.6
        TRAVIS_COMPILER: 1
        ZIP_NAME: NerfHack_2.1.0.zip
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: ilammy/msvc-dev-cmd@v1 # enable visual c compiler / nmake
    - name: setup
      run: |
        ./sys/windows/nhsetup.bat
    - name: make install
      run: |
        cd src
        nmake fetch-lua
        nmake package
        # Note: mingw build doesn't seem to build NerfHackW.exe and is disabled.
        # This would work to build the tty windows version, though.
        #cp ../sys/winnt/Makefile.gcc ./Makefile
        #mingw32-make LUA_VERSION=$LUA_VERSION install
    - uses: thedoctor0/zip-release@master
      if: startsWith(github.ref, 'refs/tags/')
      with:
        type: 'zip'
        path: binary/
        filename: NerfHack_2.1.0.zip
    - name: release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          NerfHack_2.1.0.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
